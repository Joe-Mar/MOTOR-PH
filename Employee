import java.io.BufferedReader;
import java.io.*;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.StringTokenizer;

public class Employee {
    // Employee Information
      int employeeId;
    String lastName;
    String firstName;
    String birthday;
    String address;
    String phoneNumber;
    String sss;
    String philhealth;
    String tin;
    String pagibig;
    String status;
    String position;
    String immediateSupervisor;
    double basicSalary;
    double riceSubsidy;
    double phoneAllowance;
    double clothingAllowance;
    double grossSemiMonthlyRate;
    double hourlyRate;

    // Constructor
    public Employee(int employeeId, String lastName, String firstName, String birthday, String address,
                    String phoneNumber, String sss, String philhealth, String tin, String pagibig,
                    String status, String position, String immediateSupervisor, double basicSalary,
                    double riceSubsidy, double phoneAllowance, double clothingAllowance, double grossSemiMonthlyRate,
                    double hourlyRate) {
        this.employeeId = employeeId;
        this.lastName = lastName;
        this.firstName = firstName;
        this.birthday = birthday;
        this.address = address;
        this.phoneNumber = phoneNumber;
        this.sss = sss;
        this.philhealth = philhealth;
        this.tin = tin;
        this.pagibig = pagibig;
        this.status = status;
        this.position = position;
        this.immediateSupervisor = immediateSupervisor;
        this.basicSalary = basicSalary;
        this.riceSubsidy = riceSubsidy;
        this.phoneAllowance = phoneAllowance;
        this.clothingAllowance = clothingAllowance;
        this.grossSemiMonthlyRate = grossSemiMonthlyRate;
        this.hourlyRate = hourlyRate;
    }

    // Method to read employees from CSV
    public static List<Employee> readFromCSV() {
        List<Employee> employeeList = new ArrayList<>();
        try (BufferedReader reader = new BufferedReader(new FileReader("C:\\Users\\lasic\\OneDrive\\Documents\\NetBeansProjects\\MOTOR-PH\\build\\classes\\motor\\resources\\employee-data.csv"))) { 
            String line;
            boolean firstLine = true;
            while ((line = reader.readLine()) != null) {
                if (firstLine) {
                    firstLine = false;
                    continue;
                }

                String[] data = line.split(",(?=(?:[^\"]*\"[^\"]*\")*[^\"]*$)");

                if (data.length == 19) {
                    try {
                        int parsedEmployeeId = Integer.parseInt(data[0].trim());

                        Employee emp = new Employee(
                            parsedEmployeeId,
                            data[1].trim(),
                            data[2].trim(),
                            data[3].trim(),
                            data[4].trim(),
                            data[5].trim(),
                            data[6].trim(),
                            data[7].trim(),
                            data[8].trim(),
                            data[9].trim(),
                            data[10].trim(),
                            data[11].trim(),
                            data[12].trim(),
                            Double.parseDouble(data[13].trim().replace(",", "")),
                            Double.parseDouble(data[14].trim().replace(",", "")),
                            Double.parseDouble(data[15].trim().replace(",", "")),
                            Double.parseDouble(data[16].trim().replace(",", "")),
                            Double.parseDouble(data[17].trim().replace(",", "")),
                            Double.parseDouble(data[18].trim().replace(",", ""))
                        );

                        employeeList.add(emp);

                    } catch (NumberFormatException e) {
                        System.out.println("Skipping invalid employee record: " + line);
                    }
                } else {
                    System.out.println("Invalid format: " + line);
                }
            }
        } catch (IOException e) {
            System.out.println("Error reading file: " + e.getMessage());
        }
        return employeeList;
    }

    // Method to search for Employee by ID
    public static Employee getEmployeeById(int empId) {
        List<Employee> allEmployees = readFromCSV();
        System.out.println("Searching for Employee ID: " + empId);

        for (Employee emp : allEmployees) {
            System.out.println("Checking Employee ID: " + emp.employeeId); // Debugging

            if (emp.employeeId == empId) {
                return emp;
            }
        }
        return null;
    }

    // toString method
    @Override
    public String toString() {
        return "Employee ID: " + employeeId + "\n" +
               "Name: " + firstName + " " + lastName + "\n" +
               "Birthday: " + birthday + "\n" +
               "Address: " + address + "\n" +
               "Phone Number: " + phoneNumber + "\n" +
               "SSS: " + sss + "\n" +
               "Philhealth: " + philhealth + "\n" +
               "TIN: " + tin + "\n" +
               "Pag-ibig: " + pagibig + "\n" +
               "Status: " + status + "\n" +
               "Position: " + position + "\n" +
               "Immediate Supervisor: " + immediateSupervisor + "\n" +
               "Basic Salary: " + basicSalary + "\n" +
               "Rice Subsidy: " + riceSubsidy + "\n" +
               "Phone Allowance: " + phoneAllowance + "\n" +
               "Clothing Allowance: " + clothingAllowance + "\n" +
               "Gross Semi-Monthly Rate: " + grossSemiMonthlyRate + "\n" +
               "Hourly Rate: " + hourlyRate;
    }

    // Main method for testing
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter Employee ID to search: ");
        int empId = scanner.nextInt();

        Employee emp = Employee.getEmployeeById(empId);

        if (emp != null) {
            System.out.println("\nEmployee Details:");
            System.out.println(emp);
        } else {
            System.out.println("Employee not found.");
        }

        scanner.close();
    }

    void printEmployeeDetails() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}

